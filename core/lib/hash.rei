/**
  Ethereum hash operations.

  A 256-bit value generated by the Keccak hash function.
 */
open Rethereum_rlp;

/** Abstract hash type */
type t;

/**
  The comparison function for ethereum hashes, with the same specification
  as `Pervasives.compare`. Along with the type `t`, this function `compare`
  allows the module `Hash` to be bassed as an argument to the functors
  `Set.Make` and `Map.Make`.
 */
let compare: (t, t) => int;

let to_string: t => string;

/* Decodes a hex-encoded string */
let of_string: string => t;

let from_string: string => t;

let rlp_of_t: t => Rlp.t;
